body,
html {
    margin: 0;
    padding: 0;
    height: 100%;
}

.background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

#background-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.container {
    text-align: center;
    margin-top: 50px;
    gap: 0px;
    margin-left: 0px;
}


.color-options,
.expression-options,
.background-options {
    visibility: hidden;
}

.color-options.show,
.expression-options.show,
.background-options.show {
    visibility: visible;
}

.color-options,
.expression-options,
.background-options {
    position: absolute;
    width: 100%;
}

#pikachu {
    position: relative;
    top: 47%;
    width: 30%;
    height: auto;
    left: 50%;
    transform: translateX(-50%); /* 화면 가로 중앙 정렬을 위해 필요 */
    transform: translate(-50%, -50%);
}

.button {
    display: inline-block;
    cursor: pointer;
    outline: none;
    border: none;
}

.button img {
    width: 200px; /* 수정된 부분 */
    height: auto; /* 추가된 부분 */
}



.controls {
    margin-bottom: 10px;
    padding: 0;
    display: flex;
    justify-content: center;
}

.controls button {
    margin-right: 0px;
    margin-left: 0px; /* 왼쪽 마진을 0으로 설정하여 간격을 없앱니다. */
}


.controls button.active {
    background-color: #c2c2c2; /* 활성화된 버튼의 배경색을 변경합니다. */
}

.controls button {
    transition: transform 0.3s ease-in-out; /* 호버 효과를 위한 트랜지션 */

}


.controls button:hover{
    transform: translateY(10px); /* 호버 시 이미지를 위로 이동 */

}

.controls button {
    /* 기존 스타일 유지 */
    width: 10vw;
    height: 5vw;
    background-color: white; /* 배경색을 투명으로 설정합니다. */
    border: none; /* 테두리를 없앱니다. */
    cursor: pointer; /* 커서를 포인터로 설정합니다. */
    transition: transform 0.3s ease-in-out; /* 호버 효과를 위한 트랜지션 */
    /* 그림자 추가 */
    box-shadow: -3px 3px 0px 0px #e1e1e1; /* 왼쪽과 위쪽에 그림자 추가, blur 제거 */
    vertical-align: middle; /* 버튼을 수직으로 중앙에 정렬합니다. */

}

#backgroundBtn img,
#colorBtn img {
    width: 30%; /* 이미지 너비 조절 */
    height: auto; /* 이미지 높이를 자동으로 조절하여 비율 유지 */
}

#expressionBtn img {
    width: 40%; /* 이미지 너비를 더 크게 설정 */
    height: auto; /* 이미지 높이를 자동으로 조절하여 비율 유지 */
}


.controls button img {
    width: 25%; /* 이미지 크기를 조정합니다. */
    height: auto; /* 이미지의 세로 크기를 자동으로 조정합니다. */
}

.button:after {
    content: ''; /* 화살표 제거 */
}

.button.active {
    font-weight: bold;
}

.options {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center; /* 가운데 정렬 추가 */
    top: 19%;
    gap: 30px; /* 간격 조절 */
}

.options button {
    /* 기존 스타일 유지 */
    display: flex;
    justify-content: center;
    align-items: center;
    width: 5vw;
    height: 5vw;
    border-radius: 50%; /* 원형 버튼을 만듭니다. */
    background-color: white; /* 배경색을 투명으로 설정합니다. */
    border: none; /* 테두리를 없앱니다. */
    cursor: pointer; /* 커서를 포인터로 설정합니다. */
    transition: transform 0.3s ease-in-out; /* 호버 효과를 위한 트랜지션 */
    /* 그림자 추가 */
    box-shadow: -3px 3px 0px 0px #e1e1e1; /* 왼쪽과 위쪽에 그림자 추가, blur 제거 */
}

.options button:hover {
    transform: translateY(-10px); /* 호버 시 이미지를 위로 이동 */
    /* 그림자 추가 */
    box-shadow: -3px 3px 0px 0px #e1e1e1; /* 호버 시 그림자 약간 강화, blur 제거 */
}


.options button img {
    width: 50%; /* 이미지 크기를 조정합니다. */
    height: auto; /* 이미지의 세로 크기를 자동으로 조정합니다. */
}

.expression-options button img {
    width: 60%; /* 이미지 크기를 조정합니다. */
    height: auto; /* 이미지의 세로 크기를 자동으로 조정합니다. */
}

.background-options button img {
    width: 40%; /* 이미지 크기를 조정합니다. */
    height: auto; /* 이미지의 세로 크기를 자동으로 조정합니다. */
}

.button-download img {
    width: 4vw;
    height: auto;
}

.button-wrapper .button img {
    width: 4vw;
    height: auto;
}

.button-wrapper {
    position: fixed;
    top: 50px;
    left: 88%; /* 왼쪽 상단에 위치하도록 변경 */
    display: flex;
    flex-direction: row;
    background-color: transparent;
}

.button-wrapper .button {
    margin-right: 10px; /* 버튼 사이의 간격을 조정하려면 margin 속성을 사용합니다. */
    background-color: transparent;
    
}

.button-wrapper img:hover {
    transform: translateY(-10px); /* 호버 시 이미지를 위로 이동 */
}

.button-wrapper img {
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */
  }

.home {
    position: fixed;
    top: 50px; /* 버튼이 보여야 할 위치로 수정 */
    left: 72%; /* 버튼이 보여야 할 위치로 수정 */
}

.home img {
    width: 4vw;
    height: auto;
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */

}

.home img:hover {
    transform: translateY(-10px); /* 호버 시 이미지를 위로 이동 */
}

.card {
    position: fixed;
    top: 50px; /* 버튼이 보여야 할 위치로 수정 */
    left: 83%; /* 버튼이 보여야 할 위치로 수정 */
}

.card img {
    width: 4vw;
    height: auto;
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */

}

.card img:hover {
    transform: translateY(-10px); /* 호버 시 이미지를 위로 이동 */
}

.info {
    position: fixed;
    top: 50px; /* 버튼이 보여야 할 위치로 수정 */
    left: 77.5%; /* 버튼이 보여야 할 위치로 수정 */
}

.info img {
    width: 4vw;
    height: auto;
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */

}

.info img:hover {
    transform: translateY(-10px); /* 호버 시 이미지를 위로 이동 */
}

/* CSS */

.info-box {
    position: fixed;
    top: 140px;
    left: 84%;
    transform: translateX(-50%);
    width: 25%;
    max-width: 600px;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 15px;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    color: black;
    display: none; /* 초기에는 숨김 */
    font-family: Pokemon Classic;
}

.info-box.show {
    display: block; /* 보여질 때만 표시 */
}

.info-content {
    text-align: left;
}

.info-content h2 {
    margin-top: 0;
}

.info-content ol {
    margin-top: 0;
    padding-left: 20px;
}

.info-content img {
    display: block;
    margin: 10px auto; /* 이미지를 가운데 정렬합니다. */
    max-width: 100%; /* 이미지가 너무 크면 부모 요소에 맞게 크기를 조정합니다. */
}

h2{
    font-size: 1.3rem;
}

p{
    font-size: 0.9rem;
}

ol{
    font-size: 0.7rem;
}


@media only screen and (max-width: 375px) {
    .controls button img {
        width: 80%;
        top: 10%;
    }
    #pikachu {
        position: relative;
        width: 86%;
        height: auto;
        left: 52%;
        top: 38%; /* 수정된 부분 */
    }
    .options {
        top: 30%;
        gap: 10px; /* 간격을 10px로 유지합니다. */
        z-index: 999;
    }

    .options button {
        /* 기존 스타일 유지 */
        width: 10vw; /* 버튼의 너비를 조절합니다. */
        height: 10vw; /* 버튼의 높이를 조절합니다. */
        box-shadow: -1px 1px 0px 0px #e1e1e1; /* 왼쪽과 위쪽에 그림자 추가, blur 제거 */
    }

    .options button img {
        width: 100%; /* 이미지의 너비를 100%로 설정합니다. */
        height: auto; /* 이미지의 높이를 자동으로 조정하여 비율을 유지합니다. */
        transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */
    }

    .color-options button img, .background-options button img {
        width: 60%; /* 이미지 크기를 조정합니다. */
        height: auto; /* 이미지의 세로 크기를 자동으로 조정합니다. */
    }

    .expression-options button img {
        width: 70%; /* 이미지 크기를 조정합니다. */
        height: auto; /* 이미지의 세로 크기를 자동으로 조정합니다. */
    }

    .controls button {
        /* 기존 스타일 유지 */
        width: 15vw; /* 버튼의 너비를 조절합니다. */
        height: 13vw; /* 버튼의 높이를 조절합니다. */
    margin-top: 20%;    
    box-shadow: -1px 1px 0px 0px #e1e1e1; /* 왼쪽과 위쪽에 그림자 추가, blur 제거 */
}

.controls button:hover{
    transform: translateY(5px); /* 호버 시 이미지를 위로 이동 */

}

.button-download img {
    width: 10vw;
    height: auto;
}

.button-wrapper .button img {
    width: 10vw;
    height: auto;
}

.button-wrapper {
    position: fixed;
    top: 50px;
    left: 57%; /* 왼쪽 상단에 위치하도록 변경 */
    display: flex;
    flex-direction: row;
    background-color: transparent;
}

.button-wrapper .button {
    margin-right: 0px; /* 수정된 부분 */
    background-color: transparent;
}

.button-wrapper img:hover {
    transform: none;
}

.button-wrapper img {
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */
  }

.home {
    position: fixed;
    top: 50px; /* 버튼이 보여야 할 위치로 수정 */
    left: 17%; /* 버튼이 보여야 할 위치로 수정 */
}

.home img {
    width: 10vw;
    height: auto;
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */

}

.home img:hover {
    transform: none;}

.card {
    position: fixed;
    top: 50px; /* 버튼이 보여야 할 위치로 수정 */
    left: 45%; /* 버튼이 보여야 할 위치로 수정 */
}

.card img {
    width: 10vw;
    height: auto;
    transition: transform 0.2s ease-in-out; /* 호버 효과를 위한 트랜지션 */

}

.card img:hover {
    transform: none;
}

.info {
    position: fixed;
    top: 50px; /* 버튼이 보여야 할 위치로 수정 */
    left: 31%; /* 버튼이 보여야 할 위치로 수정 */
}

.info img {
    width: 10vw;
    height: auto;

}

.info img:hover {
    transform: none;
}

#backgroundBtn img,
#colorBtn img {
    width: 50%; /* 이미지 너비 조절 */
    height: auto; /* 이미지 높이를 자동으로 조절하여 비율 유지 */
}

#expressionBtn img {
    width: 60%; /* 이미지 너비를 더 크게 설정 */
    height: auto; /* 이미지 높이를 자동으로 조절하여 비율 유지 */
}

.info-box {
    position: fixed;
    top: 100px;
    left: 50%;
    transform: translateX(-50%);
    width: 70%;
    max-width: 600px;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 15px;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    color: black;
    display: none; /* 초기에는 숨김 */
    font-family: Pokemon Classic;
}

.info-box.show {
    display: block; /* 보여질 때만 표시 */
}

.info-content {
    text-align: left;
}

.info-content h2 {
    margin-top: 0;
}

.info-content ol {
    margin-top: 0;
    padding-left: 20px;
}

.info-content img {
    display: block;
    margin: 10px auto; /* 이미지를 가운데 정렬합니다. */
    max-width: 100%; /* 이미지가 너무 크면 부모 요소에 맞게 크기를 조정합니다. */
}

h2{
    font-size: 0.8rem;
}

p{
    font-size: 0.5rem;
}

ol{
    font-size: 0.7rem;
}
}
